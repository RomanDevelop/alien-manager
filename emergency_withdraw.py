#!/usr/bin/env python3
"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –∏–∑ –ø—Ä–µ—Å–µ–π–ª–∞
"""

from web3 import Web3
from config import w3, presale_contract, WALLET_ADDRESS, PRIVATE_KEY
import os

def emergency_withdraw():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç –≤—Å–µ—Ö —Å—Ä–µ–¥—Å—Ç–≤ –∏–∑ –ø—Ä–µ—Å–µ–π–ª–∞"""
    
    if not presale_contract:
        print("‚ùå –ü—Ä–µ—Å–µ–π–ª –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        return
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–µ—Å–µ–π–ª–∞
        presale_address = presale_contract.address
        balance = w3.eth.get_balance(presale_address)
        
        if balance == 0:
            print("üí∞ –ü—Ä–µ—Å–µ–π–ª –ø—É—Å—Ç–æ–π (0 MATIC)")
            return
        
        print(f"üí∞ –ù–∞–π–¥–µ–Ω–æ –≤ –ø—Ä–µ—Å–µ–π–ª–µ: {Web3.from_wei(balance, 'ether')} MATIC")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤–ª–∞–¥–µ–ª–µ—Ü
        owner = presale_contract.functions.owner().call()
        if owner.lower() != WALLET_ADDRESS.lower():
            print(f"‚ùå –í—ã –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–µ—Å–µ–π–ª–∞. –í–ª–∞–¥–µ–ª–µ—Ü: {owner}")
            return
        
        print("‚úÖ –í—ã –≤–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–µ—Å–µ–π–ª–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤–æ–∑–≤—Ä–∞—Ç–∞
        nonce = w3.eth.get_transaction_count(WALLET_ADDRESS)
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å withdrawFunds
        try:
            tx = presale_contract.functions.withdrawFunds().build_transaction({
                'from': WALLET_ADDRESS,
                'nonce': nonce,
                'gas': 200000,
                'gasPrice': w3.eth.gas_price
            })
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ withdrawFunds: {e}")
            # –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π –ø–µ—Ä–µ–≤–æ–¥
            tx = {
                'to': presale_address,
                'from': WALLET_ADDRESS,
                'value': 0,
                'nonce': nonce,
                'gas': 200000,
                'gasPrice': w3.eth.gas_price,
                'data': '0x'  # –ü—É—Å—Ç–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
            }
        
        # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        signed_tx = w3.eth.account.sign_transaction(tx, PRIVATE_KEY)
        tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
        
        print(f"üöÄ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {tx_hash.hex()}")
        print(f"üîó Polygonscan: https://polygonscan.com/tx/{tx_hash.hex()}")
        
        # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        receipt = w3.eth.wait_for_transaction_receipt(tx_hash)
        
        if receipt.status == 1:
            print("‚úÖ –°—Ä–µ–¥—Å—Ç–≤–∞ —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã!")
        else:
            print("‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def check_presale_balance():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–µ—Å–µ–π–ª–∞"""
    
    if not presale_contract:
        print("‚ùå –ü—Ä–µ—Å–µ–π–ª –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        return
    
    try:
        presale_address = presale_contract.address
        balance = w3.eth.get_balance(presale_address)
        
        print(f"üí∞ –ë–∞–ª–∞–Ω—Å –ø—Ä–µ—Å–µ–π–ª–∞ {presale_address}:")
        print(f"   MATIC: {Web3.from_wei(balance, 'ether')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
        owner = presale_contract.functions.owner().call()
        print(f"   –í–ª–∞–¥–µ–ª–µ—Ü: {owner}")
        print(f"   –í—ã –≤–ª–∞–¥–µ–ª–µ—Ü: {'‚úÖ' if owner.lower() == WALLET_ADDRESS.lower() else '‚ùå'}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –∏–∑ –ø—Ä–µ—Å–µ–π–ª–∞")
    print("=" * 50)
    
    check_presale_balance()
    print()
    
    response = input("–•–æ—Ç–∏—Ç–µ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –≤–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞? (y/n): ")
    if response.lower() == 'y':
        emergency_withdraw()
    else:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞") 