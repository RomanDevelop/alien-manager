#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤ ALIEN –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config import w3, TOKEN_ADDRESS, TOKEN_V2_ABI
from token_utils import get_token_balance, get_matic_balance
from web3 import Web3

def check_token_contract_balance():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ ALIEN"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ ALIEN")
    print("=" * 60)
    
    # –ê–¥—Ä–µ—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ —Ç–æ–∫–µ–Ω–∞
    token_address = "0xa8e302849DdF86769C026d9A2405e1cdA01ED992"
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Ç–æ–∫–µ–Ω–∞
        token_contract = w3.eth.contract(
            address=Web3.to_checksum_address(token_address),
            abi=TOKEN_V2_ABI
        )
        
        print(f"üìç –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ —Ç–æ–∫–µ–Ω–∞: {token_address}")
        print(f"üîó Polygonscan: https://polygonscan.com/address/{token_address}")
        print()
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ
        try:
            name = token_contract.functions.name().call()
            symbol = token_contract.functions.symbol().call()
            decimals = token_contract.functions.decimals().call()
            total_supply = token_contract.functions.totalSupply().call()
            
            print(f"üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–µ:")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
            print(f"   –°–∏–º–≤–æ–ª: {symbol}")
            print(f"   –î—Ä–æ–±–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤: {decimals}")
            print(f"   –û–±—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: {total_supply:,} {symbol}")
            print()
            
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–∫–µ–Ω–µ: {e}")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –Ω–∞ –ø—Ä–µ—Å–µ–π–ª–µ
        presale_address = "0x2699838c090346Eaf93F96069B56B3637828dFAC"
        presale_balance = token_contract.functions.balanceOf(
            Web3.to_checksum_address(presale_address)
        ).call()
        
        print(f"üí∞ –ë–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –ø—Ä–µ—Å–µ–π–ª–µ:")
        print(f"   –ê–¥—Ä–µ—Å –ø—Ä–µ—Å–µ–π–ª–∞: {presale_address}")
        print(f"   –ë–∞–ª–∞–Ω—Å: {presale_balance:,} ALIEN")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —É –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è owner)
        try:
            owner = token_contract.functions.owner().call()
            owner_balance = token_contract.functions.balanceOf(owner).call()
            
            print(f"üëë –ë–∞–ª–∞–Ω—Å —É –≤–ª–∞–¥–µ–ª—å—Ü–∞:")
            print(f"   –ê–¥—Ä–µ—Å –≤–ª–∞–¥–µ–ª—å—Ü–∞: {owner}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {owner_balance:,} ALIEN")
            print()
            
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ: {e}")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –≤ .env)
        try:
            from config import WALLET_ADDRESS
            if WALLET_ADDRESS:
                user_balance = token_contract.functions.balanceOf(
                    Web3.to_checksum_address(WALLET_ADDRESS)
                ).call()
                
                print(f"üë§ –ë–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
                print(f"   –ê–¥—Ä–µ—Å: {WALLET_ADDRESS}")
                print(f"   –ë–∞–ª–∞–Ω—Å: {user_balance:,} ALIEN")
                print()
                
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (allowance) –¥–ª—è –ø—Ä–µ—Å–µ–π–ª–∞
        try:
            if WALLET_ADDRESS:
                allowance = token_contract.functions.allowance(
                    Web3.to_checksum_address(WALLET_ADDRESS),
                    Web3.to_checksum_address(presale_address)
                ).call()
                
                print(f"üîê –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ—Å–µ–π–ª–∞:")
                print(f"   Allowance: {allowance:,} ALIEN")
                print()
                
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: {e}")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–∞—É–∑—ã
        try:
            paused = token_contract.functions.paused().call()
            print(f"‚è∏Ô∏è  –°—Ç–∞—Ç—É—Å –ø–∞—É–∑—ã: {'–î–∞' if paused else '–ù–µ—Ç'}")
            print()
            
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–∞—É–∑—ã: {e}")
            print()
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        print("üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        print(f"   –°–µ—Ç—å: Polygon Mainnet")
        print(f"   RPC: {w3.eth.chain_id}")
        print(f"   –ë–ª–æ–∫: {w3.eth.block_number}")
        print()
        
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞: {e}")
        return False
    
    return True

def check_multiple_addresses():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤ —É –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–¥—Ä–µ—Å–æ–≤"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤ —É –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–¥—Ä–µ—Å–æ–≤")
    print("=" * 60)
    
    token_address = "0xa8e302849DdF86769C026d9A2405e1cdA01ED992"
    token_contract = w3.eth.contract(
        address=Web3.to_checksum_address(token_address),
        abi=TOKEN_V2_ABI
    )
    
    # –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    addresses_to_check = [
        "0x2699838c090346Eaf93F96069B56B3637828dFAC",  # –ü—Ä–µ—Å–µ–π–ª
        "0xa8e302849DdF86769C026d9A2405e1cdA01ED992",  # –°–∞–º —Ç–æ–∫–µ–Ω
        "0x324EB0E51465d70c3D546BeE1cf18F74A01E9924",  # –í–ª–∞–¥–µ–ª–µ—Ü
    ]
    
    print("üìã –ë–∞–ª–∞–Ω—Å—ã —Ç–æ–∫–µ–Ω–æ–≤:")
    print("-" * 40)
    
    for i, address in enumerate(addresses_to_check, 1):
        try:
            balance = token_contract.functions.balanceOf(
                Web3.to_checksum_address(address)
            ).call()
            
            print(f"{i}. {address}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {balance:,} ALIEN")
            print()
            
        except Exception as e:
            print(f"{i}. {address}")
            print(f"   –û—à–∏–±–∫–∞: {e}")
            print()

if __name__ == "__main__":
    print("üöÄ ALIEN Token Balance Checker")
    print("=" * 40)
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    success = check_token_contract_balance()
    
    if success:
        print("\n" + "=" * 40)
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–¥—Ä–µ—Å–æ–≤
        check_multiple_addresses()
    
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!") 