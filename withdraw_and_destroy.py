#!/usr/bin/env python3
"""
–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ—Å–µ–π–ª–∞
"""

from web3 import Web3
from config import w3, presale_contract, WALLET_ADDRESS, PRIVATE_KEY
import os

def withdraw_and_destroy():
    """–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ—Å–µ–π–ª–∞"""
    
    if not presale_contract:
        print("‚ùå –ü—Ä–µ—Å–µ–π–ª –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        return
    
    try:
        presale_address = presale_contract.address
        print(f"üéØ –ê–¥—Ä–µ—Å –ø—Ä–µ—Å–µ–π–ª–∞: {presale_address}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–µ—Å–µ–π–ª–∞
        balance = w3.eth.get_balance(presale_address)
        print(f"üí∞ –ë–∞–ª–∞–Ω—Å –ø—Ä–µ—Å–µ–π–ª–∞: {Web3.from_wei(balance, 'ether')} MATIC")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
        try:
            owner = presale_contract.functions.owner().call()
            print(f"üëë –í–ª–∞–¥–µ–ª–µ—Ü: {owner}")
            print(f"üîë –í—ã –≤–ª–∞–¥–µ–ª–µ—Ü: {'‚úÖ' if owner.lower() == WALLET_ADDRESS.lower() else '‚ùå'}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞: {e}")
            owner = WALLET_ADDRESS  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤—ã –≤–ª–∞–¥–µ–ª–µ—Ü
        
        if owner.lower() != WALLET_ADDRESS.lower():
            print("‚ùå –í—ã –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–µ—Å–µ–π–ª–∞. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à–∏ —Ç–æ–∫–µ–Ω—ã
        try:
            user_info = presale_contract.functions.getUserInfo(WALLET_ADDRESS).call()
            contribution = Web3.from_wei(user_info[0], 'ether')
            claimable_tokens = user_info[1]
            print(f"üíé –í–∞—à –≤–∫–ª–∞–¥: {contribution} MATIC")
            print(f"üéÅ Claimable —Ç–æ–∫–µ–Ω—ã: {claimable_tokens} ALIEN")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à –≤–∫–ª–∞–¥: {e}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ (–µ—Å–ª–∏ –ø—Ä–µ—Å–µ–π–ª –µ—â–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è)
        if balance > 0:
            print("\nüîÑ –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤...")
            
            nonce = w3.eth.get_transaction_count(WALLET_ADDRESS)
            
            # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å withdrawFunds
            try:
                tx = presale_contract.functions.withdrawFunds().build_transaction({
                    'from': WALLET_ADDRESS,
                    'nonce': nonce,
                    'gas': 200000,
                    'gasPrice': w3.eth.gas_price
                })
                
                signed_tx = w3.eth.account.sign_transaction(tx, PRIVATE_KEY)
                tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)
                
                print(f"üöÄ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {tx_hash.hex()}")
                print(f"üîó Polygonscan: https://polygonscan.com/tx/{tx_hash.hex()}")
                
                receipt = w3.eth.wait_for_transaction_receipt(tx_hash)
                
                if receipt.status == 1:
                    print("‚úÖ –°—Ä–µ–¥—Å—Ç–≤–∞ —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã!")
                else:
                    print("‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤: {e}")
                print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–µ—Å–µ–π–ª –µ—â–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è")
        
        print("\nüóëÔ∏è –ü—Ä–µ—Å–µ–π–ª –≥–æ—Ç–æ–≤ –∫ —É–¥–∞–ª–µ–Ω–∏—é!")
        print("üìù –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ:")
        print("1. –î–æ–∂–¥–∞—Ç—å—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–µ—Å–µ–π–ª–∞")
        print("2. –ó–∞–±—Ä–∞—Ç—å –≤—Å–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ withdrawFunds")
        print("3. –ó–∞–±—Ä–∞—Ç—å –Ω–µ—Ä–∞—Å–ø—Ä–æ–¥–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã —á–µ—Ä–µ–∑ withdrawUnsoldTokens")
        print("4. –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç (—Ç—Ä–µ–±—É–µ—Ç selfdestruct –≤ –∫–æ–¥–µ)")
        
        print(f"\nüìç –ê–¥—Ä–µ—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {presale_address}")
        print("üîó Polygonscan: https://polygonscan.com/address/" + presale_address)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üóëÔ∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —É–¥–∞–ª–µ–Ω–∏—é –ø—Ä–µ—Å–µ–π–ª–∞")
    print("=" * 50)
    
    withdraw_and_destroy() 