import pandas as pd
import os
from datetime import datetime

HISTORY_FILE = 'history.csv'

def log_action(action, tx_hash=None, amount=None, address=None, status="success"):
    """
    –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –≤ CSV —Ñ–∞–π–ª
    
    Args:
        action (str): –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (balance, buy, claim)
        tx_hash (str): –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        amount (float): –°—É–º–º–∞ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
        address (str): –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
        status (str): –°—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ü–∏–∏
    """
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
    record = {
        'timestamp': timestamp,
        'action': action,
        'tx_hash': tx_hash or '',
        'amount': amount or '',
        'address': address or '',
        'status': status
    }
    
    # –°–æ–∑–¥–∞–µ–º DataFrame
    df_new = pd.DataFrame([record])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if os.path.exists(HISTORY_FILE):
        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
        df_existing = pd.read_csv(HISTORY_FILE)
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å—å—é
        df_combined = pd.concat([df_existing, df_new], ignore_index=True)
    else:
        df_combined = df_new
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
    df_combined.to_csv(HISTORY_FILE, index=False)
    
    print(f"‚úÖ –î–µ–π—Å—Ç–≤–∏–µ '{action}' –∑–∞–ø–∏—Å–∞–Ω–æ –≤ {HISTORY_FILE}")

def get_history(limit=None):
    """
    –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π
    
    Args:
        limit (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π
    
    Returns:
        pd.DataFrame: –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π
    """
    if not os.path.exists(HISTORY_FILE):
        return pd.DataFrame()
    
    df = pd.read_csv(HISTORY_FILE)
    
    if limit:
        df = df.tail(limit)
    
    return df

def print_history(limit=10):
    """
    –í—ã–≤–µ—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å
    
    Args:
        limit (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π
    """
    df = get_history(limit)
    
    if df.empty:
        print("üìù –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø—É—Å—Ç–∞")
        return
    
    print(f"\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ {len(df)} –¥–µ–π—Å—Ç–≤–∏–π:")
    print("-" * 80)
    
    for _, row in df.iterrows():
        timestamp = row['timestamp']
        action = row['action']
        tx_hash = row['tx_hash'] if pd.notna(row['tx_hash']) else ''
        amount = row['amount'] if pd.notna(row['amount']) else ''
        status = row['status']
        
        print(f"üïê {timestamp} | {action.upper()} | {status}")
        if tx_hash:
            print(f"   üìÑ TX: {tx_hash}")
        if amount:
            print(f"   üí∞ –°—É–º–º–∞: {amount}")
        print()

def clear_history():
    """
    –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π
    """
    if os.path.exists(HISTORY_FILE):
        os.remove(HISTORY_FILE)
        print("üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π –æ—á–∏—â–µ–Ω–∞")
    else:
        print("üìù –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π —É–∂–µ –ø—É—Å—Ç–∞")

def get_statistics():
    """
    –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–µ–π—Å—Ç–≤–∏–π
    
    Returns:
        dict: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    """
    df = get_history()
    
    if df.empty:
        return {"total_actions": 0}
    
    stats = {
        "total_actions": len(df),
        "actions_by_type": df['action'].value_counts().to_dict(),
        "success_rate": len(df[df['status'] == 'success']) / len(df) * 100,
        "last_action": df.iloc[-1]['action'] if not df.empty else None,
        "last_timestamp": df.iloc[-1]['timestamp'] if not df.empty else None
    }
    
    return stats 