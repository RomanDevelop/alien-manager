const { ethers } = require("ethers");

async function main() {
    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –ø—Ä–µ—Å–µ–π–ª–∞ ALIEN...");
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–µ–ø–ª–æ—è
    const tokenAddress = "0xa8e302849DdF86769C026d9A2405e1cdA01ED992";
    const startTime = Math.floor(Date.now() / 1000) + 300; // –ß–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
    const endTime = Math.floor(Date.now() / 1000) + 1728000; // –ß–µ—Ä–µ–∑ 20 –¥–Ω–µ–π
    const hardCap = ethers.parseEther("100"); // 100 MATIC
    const tokenPrice = ethers.parseEther("0.0005"); // 0.0005 MATIC –∑–∞ —Ç–æ–∫–µ–Ω
    
    console.log("üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ø–ª–æ—è:");
    console.log(`–¢–æ–∫–µ–Ω: ${tokenAddress}`);
    console.log(`–ù–∞—á–∞–ª–æ: ${new Date(startTime * 1000).toLocaleString()}`);
    console.log(`–û–∫–æ–Ω—á–∞–Ω–∏–µ: ${new Date(endTime * 1000).toLocaleString()}`);
    console.log(`Hardcap: ${ethers.formatEther(hardCap)} MATIC`);
    console.log(`–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: ${ethers.formatEther(tokenPrice)} MATIC`);
    
    // –ü–æ–ª—É—á–∞–µ–º Hardhat ethers –¥–ª—è –¥–µ–ø–ª–æ—è
    const hre = require("hardhat");
    const hardhatEthers = hre.ethers;
    
    // –î–µ–ø–ª–æ–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
    const AlienPresale = await hardhatEthers.getContractFactory("AlienPresale");
    const presale = await AlienPresale.deploy(
        tokenAddress,
        startTime,
        endTime,
        hardCap,
        tokenPrice
    );
    
    console.log("‚è≥ –û–∂–∏–¥–∞–µ–º –¥–µ–ø–ª–æ–π...");
    await presale.waitForDeployment();
    
    const presaleAddress = await presale.getAddress();
    console.log("‚úÖ –ü—Ä–µ—Å–µ–π–ª —É—Å–ø–µ—à–Ω–æ –¥–µ–ø–ª–æ–µ–Ω!");
    console.log(`üìç –ê–¥—Ä–µ—Å: ${presaleAddress}`);
    console.log(`üîó Polygonscan: https://polygonscan.com/address/${presaleAddress}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    console.log("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:");
    const deployedStartTime = await presale.startTime();
    const deployedEndTime = await presale.endTime();
    const deployedHardCap = await presale.hardCap();
    const deployedTokenPrice = await presale.tokenPrice();
    
    console.log(`–ù–∞—á–∞–ª–æ: ${new Date(Number(deployedStartTime) * 1000).toLocaleString()}`);
    console.log(`–û–∫–æ–Ω—á–∞–Ω–∏–µ: ${new Date(Number(deployedEndTime) * 1000).toLocaleString()}`);
    console.log(`Hardcap: ${ethers.formatEther(deployedHardCap)} MATIC`);
    console.log(`–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: ${ethers.formatEther(deployedTokenPrice)} MATIC`);
    
    console.log("\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:");
    console.log("1. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ Polygonscan");
    console.log("2. –û–±–Ω–æ–≤–∏—Ç–µ PRESALE_ADDRESS –≤ .env —Ñ–∞–π–ª–µ");
    console.log("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞: python bot.py info");
    
    return presaleAddress;
}

main()
    .then((address) => {
        console.log(`\nüöÄ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω! –ê–¥—Ä–µ—Å: ${address}`);
        process.exit(0);
    })
    .catch((error) => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è:", error);
        process.exit(1);
    }); 